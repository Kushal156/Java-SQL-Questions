package com.Spring.orm;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

public class TestScenarios {
	
	private static final Logger LOGGER = Logger.getLogger(TestScenarios.class.getName());

    private final int rows;
    private final int columns;
    private final int[][] ticket;

    
    public TestScenarios(int rows, int columns) {
        this.rows = rows;
        this.columns = columns;
        this.ticket = new int[rows][columns];
    }

    private void generateTicket() {
        Random random = new Random();

        for (int col = 0; col < columns; col++) {
            Set<Integer> columnNumbers = new HashSet<>();

            for (int row = 0; row < rows / 2; row++) {
                int randomNumber = (col * 10) + random.nextInt(10) + 1;
                while (columnNumbers.contains(randomNumber)) {
                    randomNumber = (col * 10) + random.nextInt(10) + 1;
                }
                columnNumbers.add(randomNumber);
                ticket[row][col] = randomNumber;
            }

            for (int row = rows / 2; row < rows; row++) {
                int randomNumber = (col * 10) + random.nextInt(10) + 1;
                while (columnNumbers.contains(randomNumber)) {
                    randomNumber = (col * 10) + random.nextInt(10) + 1;
                }
                columnNumbers.add(randomNumber);
                ticket[row][col] = randomNumber;
            }
        }
    }

    public void displayTicket() {
        for (int[] row : ticket) {
            for (int number : row) {
                System.out.print(number + "\t");
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        try {
            Scanner sc = new Scanner(System.in);
            System.out.println("Enter the number of rows:");
        	int rows = sc.nextInt();
            System.out.println("Enter the number of columns");
        	int columns = sc.nextInt();

            TestScenarios housieTicket = new TestScenarios(rows, columns);
            housieTicket.generateTicket();
            housieTicket.displayTicket();
        } catch (Exception e) {
            LOGGER.log(Level.SEVERE, "An error occurred: " + e.getMessage(), e);
        }
    }
}
